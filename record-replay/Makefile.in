# By default, your resulting library will have this name.
# IS libfredhijack A BETTER NAME?
LIBNAME=fredhijack

ifndef DMTCP_ROOT
  ifneq (@DMTCP_ROOT@,)
    DMTCP_ROOT=@DMTCP_ROOT@
  else
    # Modify if your DMTCP_ROOT is located elsewhere.
    DMTCP_ROOT=../..
  endif
endif

DMTCP_INCLUDE_PATH = $(DMTCP_ROOT)/include
JALIB = $(DMTCP_ROOT)/jalib

INCLUDES = -I$(JALIB) -I$(DMTCP_INCLUDE_PATH) -I.

HEADERS = fred_interface.h fred_wrappers.h log.h fred_types.h \
	  synchronizationlogging.h threadinfo.h  autogen/fred_wrappers_raw.h \
	  autogen/wrapper_util.h autogen/fred_read_log.h
# As you add new files to your hijack library, add the object file names here.
FREDHIJACK_OBJS = fred_signalwrappers.o fred_epollwrappers.o \
	fstreamwrappers.o fred_waitwrappers.o \
	fred_mallocwrappers.o fred_filewrappers.o fred_syscallsreal.o \
	fred_socketwrappers.o pthreadwrappers.o netwrappers.o fred.o \
	fred_miscwrappers.o syscallsreal_helper.o \
	synchronizationlogging.o log.o fred_trampolines.o \
	threadinfo.o wrapper_util.o

JALIB_OBJS = $(JALIB)/jassert.o $(JALIB)/jalib.o $(JALIB)/jalloc.o \
        $(JALIB)/jfilesystem.o

FRED_READ_LOG_OBJS = fred_read_log.o nosyscallsreal.o util.o stubs.o log.o \
		     wrapper_util.o ${notdir ${JALIB_OBJS}}

CFLAGS += -DDMTCP -fPIC -DPIC -c --std=gnu99 -g
CXXFLAGS += -DDMTCP -fPIC -DPIC -c -g

# For 32-bits, g++ will try to compile for generic 32-bit unless it knows
#   it can assume i486 or better.
HAS_I486 = ${shell test `uname -m` = i686 -o  `uname -m` = i586 \
			-o `uname -m` = i486 && echo 'yes'}
ifeq (${HAS_I486},'yes')
# This -march=i486 is needed to compile synchronizationlogging.cpp
CXXFLAGS += -march=i486
endif

all: ${LIBNAME}.so fred_command fred_read_log

fred_command: fred_command.o
	${CXX} -o $@ $^

fred_read_log: ${FRED_READ_LOG_OBJS}
	${CXX} -o $@ $^ -lpthread -lrt

# We link the library using C++ for compatibility with the main dmtcphijack.so
${LIBNAME}.so: ${FREDHIJACK_OBJS} ${LIBFREDINTERNAL_OBJS}
	${CXX} -shared -fPIC -o $@ $^

j%.o: ${JALIB}/j%.o
	cp $< $@

%.o: autogen/%.c ${HEADERS}
	${CC} ${CFLAGS} -I. -o $@ $<
%.o: autogen/%.cpp ${HEADERS}
	${CXX} ${CXXFLAGS} ${INCLUDES} -o $@ $<

%.o: %.c ${HEADERS}
	${CC} ${CFLAGS} ${INCLUDES} -o $@ $<
%.o: %.cpp ${HEADERS}
	${CXX} ${CXXFLAGS} ${INCLUDES} -o $@ $<

check:
	@ echo ${LIBNAME} does not have any local checks.

tidy:
	rm -f *~ .*.swp dmtcp_restart_script*.sh ckpt_*.dmtcp

clean:
	rm -f ${FREDHIJACK_OBJS} ${LIBFREDINTERNAL_OBJS} \
	  ${FRED_READ_LOG_OBJS} fred_command fred_command.o \
	  fred_read_log \
	  ${LIBNAME}.so ${notdir ${JALIB_OBJS}}

distclean: clean
	rm -f Makefile *~ .*.swp dmtcp_restart_script*.sh ckpt_*.dmtcp \
	  config.log config.status

dist: distclean
	dir=`basename $$PWD`; cd ..; \
	  tar czvf $$dir.tar.gz --exclude-vcs ./$$dir
	dir=`basename $$PWD`; ls -l ../$$dir.tar.gz

.PHONY: default check tidy clean distclean dist
